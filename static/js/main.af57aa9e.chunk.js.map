{"version":3,"sources":["reportWebVitals.js","components/card.js","components/cardList.js","components/searchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","cardsArray","map","user","i","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","_React$Component","onSearchChange","event","searchfield","target","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af57aa9e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst CardList = ({ robots }) => {\n    const cardsArray = robots.map((user, i) => {\n        return (\n        <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}\n            />\n        );\n    })\n    return (\n        <div>\n            {cardsArray}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n    return (\n        <div className='pa2'>\n        <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots'\n            onChange={searchChange} \n        />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n    <div style={{ overflowY: 'scroll', border: '0px solid black', height: '500px'}}>\n        {props.children}\n    </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\ncomponentDidCatch(error, info) {\n    this.setState({ hasError: true})\n}\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        } \n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/cardList';\nimport SearchBox from '../components/searchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport '../containers/app.css';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({ robots: users}));  \n}\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    } \n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ? \n            <h1>Loading</h1> :\n        (\n             <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n            );\n    }             \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\ndocument.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}